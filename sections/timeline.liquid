{% stylesheet %}
.timeline-section {
  position: relative;
  padding: 60px 20px;
  text-align: center;
}

.timeline-section-title {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 50px;
}

.timeline-line {
  position: absolute;
  top: 0;
  left: 50%;
  width: 4px;
  height: 100%;
  background: #e5e5e5;
  transform: translateX(-50%);
  z-index: 1;
}

.timeline-items {
  display: flex;
  flex-direction: column;
  gap: 80px;
  position: relative;
}

.timeline-item {
  display: flex;
  align-items: center;
  position: relative;
  opacity: 0;
  transform: translateY(40px);
  transition: opacity 0.6s ease, transform 0.6s ease;
  z-index: 2;
}

.timeline-item.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Zigzag positioning */
.timeline-item.left {
  flex-direction: row-reverse;
  justify-content: flex-start;
}

.timeline-item.right {
  flex-direction: row;
  justify-content: flex-start;
}

.timeline-marker {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: #bbb;
  position: relative;
  z-index: 2;
  transition: transform 0.3s ease, background 0.3s ease;
}

.timeline-content {
  background: #fff;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0,0,0,0.08);
  max-width: 400px;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.timeline-item.left .timeline-content {
  margin-right: 40px;
}

.timeline-item.right .timeline-content {
  margin-left: 40px;
}

/* Hover effects */
.timeline-content:hover {
  transform: translateY(-10px) scale(1.02);
  box-shadow: 0 12px 25px rgba(0,0,0,0.15);
}

.timeline-item:hover .timeline-marker {
  background: #007bff;
  transform: scale(1.2);
}

/* Mobile stack */
@media (max-width: 767px) {
  .timeline-line {
    left: 10px;
  }

  .timeline-item {
    width: 100%;
    padding-left: 50px;
    flex-direction: row;
    text-align: left !important;
  }

  .timeline-item.left,
  .timeline-item.right {
    flex-direction: row;
  }

  .timeline-item.left .timeline-content,
  .timeline-item.right .timeline-content {
    margin: 0 0 0 20px;
  }

  .timeline-marker {
    left: 0 !important;
    transform: translateX(0);
  }
}
{% endstylesheet %}

<section class="timeline-section">
  {% if section.settings.title != blank %}
    <h2 class="timeline-section-title">{{ section.settings.title }}</h2>
  {% endif %}

  <div class="timeline-line"></div>
  <div class="timeline-items">
    {% for block in section.blocks %}
      <div class="timeline-item {{ block.settings.position }}">
        <div class="timeline-marker"></div>
        <div class="timeline-content">
          {% if block.settings.image != blank %}
            <div class="timeline-icon">
              <img src="{{ block.settings.image | image_url: width: 80 }}" alt="{{ block.settings.heading }}">
            </div>
          {% endif %}
          <h3>{{ block.settings.heading }}</h3>
          <p>{{ block.settings.text }}</p>
        </div>
      </div>
    {% endfor %}
  </div>
</section>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const items = document.querySelectorAll(".timeline-item");
  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add("visible");
        observer.unobserve(entry.target); // reveal once
      }
    });
  }, { threshold: 0.2 });

  items.forEach(item => observer.observe(item));
});
</script>

{% schema %}
{
  "name": "Timeline",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Our Process"
    }
  ],
  "blocks": [
    {
      "type": "step",
      "name": "Step",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Step Image"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Step Heading",
          "default": "Step Title"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Step Description",
          "default": "Describe this step in your process."
        },
        {
          "type": "select",
          "id": "position",
          "label": "Position",
          "default": "left",
          "options": [
            { "value": "left", "label": "Left" },
            { "value": "right", "label": "Right" }
          ]
        }
      ]
    }
  ],
  "max_blocks": 10,
  "presets": [
    {
      "name": "Timeline",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}
